-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    password character varying(20) NOT NULL,
    email character varying(50) UNIQUE NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."systemUsers"
(
    "userId" integer  UNIQUE  NOT NULL,
    "firstName" character varying(50) NOT NULL,
    "lastName" character varying(50) NOT NULL,
    "nationalityId"  character(11)  UNIQUE  NOT NULL,
    "dateOfBirth" date NOT NULL,
    CONSTRAINT "FK_SystemUser_User" PRIMARY KEY ("userId")
);

CREATE TABLE IF NOT EXISTS public."employerUsers"
(
    "userId" integer  UNIQUE  NOT NULL,
    "companyName" character varying(50)  NOT NULL,
    "webSite" character varying(50) UNIQUE  NOT NULL,
    "phoneNumber" character(11)  UNIQUE NOT NULL,
    PRIMARY KEY ("userId")
);

CREATE TABLE IF NOT EXISTS public."jobSeekerUsers"
(
    "userId" integer  UNIQUE NOT NULL,
    "firstName" character varying(50) NOT NULL,
    "lastName" character varying(50) NOT NULL,
    "nationalityId" character(11)  UNIQUE NOT NULL,
    "dateOfBirth" date NOT NULL,
    PRIMARY KEY ("userId")
);

CREATE TABLE IF NOT EXISTS public.approves
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "userId" integer NOT NULL,
    "approvalDate" date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."jobSeekerMernisApproves"
(
    "approveId" integer  UNIQUE NOT NULL,
    PRIMARY KEY ("approveId")
);

CREATE TABLE IF NOT EXISTS public."employerEmailApproves"
(
    "approveId" integer UNIQUE  NOT NULL,
    PRIMARY KEY ("approveId")
);

CREATE TABLE IF NOT EXISTS public."employerHmrsAdminApproves"
(
    "approveId" integer UNIQUE  NOT NULL,
    "approvedHmrsUserId" integer NOT NULL,
    PRIMARY KEY ("approveId")
);

CREATE TABLE IF NOT EXISTS public."jobSeekerEmailApproves"
(
    "approveId" integer UNIQUE  NOT NULL,
    PRIMARY KEY ("approveId")
);

CREATE TABLE IF NOT EXISTS public."jobPositions"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character UNIQUE  NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."systemUsers"
    ADD FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."employerUsers"
    ADD CONSTRAINT "FK_EmployerUser_User" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."jobSeekerUsers"
    ADD CONSTRAINT "FK_JobSeekerUser_User" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.approves
    ADD CONSTRAINT "FK_Approves_Users" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."jobSeekerMernisApproves"
    ADD CONSTRAINT "FK_JobSeekerMernisApproves_Approves" FOREIGN KEY ("approveId")
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."employerEmailApproves"
    ADD CONSTRAINT "FK_EmployerEmailApproves_Approves" FOREIGN KEY ("approveId")
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."employerHmrsAdminApproves"
    ADD CONSTRAINT "FK_EmployerHmrsAdminApproves_Id_Approves" FOREIGN KEY ("approveId")
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."employerHmrsAdminApproves"
    ADD CONSTRAINT "FK_EmployerHmrsAdminApproves_ApprovedHmrsUserId_Approves" FOREIGN KEY ("approvedHmrsUserId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."jobSeekerEmailApproves"
    ADD FOREIGN KEY ("approveId")
    REFERENCES public.approves (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;