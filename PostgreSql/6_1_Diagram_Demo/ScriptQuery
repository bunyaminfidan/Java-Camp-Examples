-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Users"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "Password" character varying(20)  NOT NULL,
    "Email" character varying(50) UNIQUE  NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SystemUser"
(
    "UserId" integer UNIQUE  NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "NationalityId" character(11) UNIQUE  NOT NULL,
    "YearOfBirth" date NOT NULL,
    CONSTRAINT "FK_SystemUser_User" PRIMARY KEY ("UserId")
);

CREATE TABLE IF NOT EXISTS public."EmployerUser"
(
    "UserId" integer UNIQUE  NOT NULL,
    "CompanyName" character varying(50) UNIQUE  NOT NULL,
    "Website" character varying(50) UNIQUE  NOT NULL,
    "PhoneNumber" character(11) UNIQUE   NOT NULL,
    PRIMARY KEY ("UserId")
);

CREATE TABLE IF NOT EXISTS public."JobSeekerUser"
(
    "UserId" integer UNIQUE  NOT NULL,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "NationalityId" character(11) UNIQUE  NOT NULL,
    "YearOfBirth" date NOT NULL,
    PRIMARY KEY ("UserId")
);

CREATE TABLE IF NOT EXISTS public."Approves"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ApprovalDate" date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."JobSeekerMernisApproves"
(
    "ApproveId" integer NOT NULL,
    PRIMARY KEY ("ApproveId")
);

CREATE TABLE IF NOT EXISTS public."EmployerEmailApproves"
(
    "ApproveId"  integer UNIQUE NOT NULL,
    PRIMARY KEY ("ApproveId")
);

CREATE TABLE IF NOT EXISTS public."EmployerHmrsAdminApproves"
(
    "ApproveId" integer  UNIQUE NOT NULL,
    "ApprovedHmrsUserId" integer NOT NULL,
    PRIMARY KEY ("ApproveId")
);

CREATE TABLE IF NOT EXISTS public."JobSeekerEmailApproves"
(
    "ApproveId" integer  UNIQUE NOT NULL,
    PRIMARY KEY ("ApproveId")
);

CREATE TABLE IF NOT EXISTS public."JobPositions"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    "Name" character UNIQUE  NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."SystemUser"
    ADD FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EmployerUser"
    ADD CONSTRAINT "FK_EmployerUser_User" FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."JobSeekerUser"
    ADD CONSTRAINT "FK_JobSeekerUser_User" FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Approves"
    ADD CONSTRAINT "FK_Approves_Users" FOREIGN KEY ("UserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."JobSeekerMernisApproves"
    ADD CONSTRAINT "FK_JobSeekerMernisApproves_Approves" FOREIGN KEY ("ApproveId")
    REFERENCES public."Approves" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EmployerEmailApproves"
    ADD CONSTRAINT "FK_EmployerEmailApproves_Approves" FOREIGN KEY ("ApproveId")
    REFERENCES public."Approves" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EmployerHmrsAdminApproves"
    ADD CONSTRAINT "FK_EmployerHmrsAdminApproves_Id_Approves" FOREIGN KEY ("ApproveId")
    REFERENCES public."Approves" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EmployerHmrsAdminApproves"
    ADD CONSTRAINT "FK_EmployerHmrsAdminApproves_ApprovedHmrsUserId_Approves" FOREIGN KEY ("ApprovedHmrsUserId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."JobSeekerEmailApproves"
    ADD FOREIGN KEY ("ApproveId")
    REFERENCES public."Approves" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;